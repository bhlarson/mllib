# yamllint disable-line rule:line-length
workflow:
  metadata:
    generateName: crisplit-
  annotations:
    workflows.ml.argoproj.io/description: |
      Perform a training sequence
      Find parameter optimized network
  spec:
    arguments:
      parameters:
        - name: train_image
          value: 'bhlarson/torch-train:latest'
        - name: batch_size
          value: 3
        - name: output_name
          value: 20220520i
        - name: target_structure
          value: 0.0
        - name: dataset
          value: lit
        - name: width
          value: 640
        - name: height
          value: 640
          # Start step to test/recover failed runs
        - name: start
          value: 0
          # Start container and wait for debugger to attach
        - name: debug
          value: false
          # Perform minimum run to test code execution
        - name: min
          value: false

    entrypoint: train-crisp
    priority: 1
    templates:
      - name: train-crisp
        dag:
          tasks:
            - name: normalized-train
              template: train
              when: "{{workflow.parameters.start}} < 1"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: train, value: true}
                  - {name: infer, value: false}
                  - {name: search_structure, value: false}
                  - {name: target_structure, value: "{{workflow.parameters.target_structure}}"}
                  - {name: learning_rate, value: 2e-4}
                  - {name: epochs, value: 2}
                  - {name: model_src, value: ""}
                  - {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_00"}
                  - {name: class_weight, value: "[0.01, 1.0]"}
                  - {name: description, value: '{"author":"Brad Larson","description":"Crisp segment class normzlized train target size target {{workflow.parameters.target_structure}}"}'}
                artifacts:
                  - name: prev_results
                    raw:
                      data: |
                        batches: 0
            - name: train
              dependencies: [normalized-train]
              template: train
              when: "{{workflow.parameters.start}} < 2"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: train, value: true}
                  - {name: infer, value: false}
                  - {name: search_structure, value: false}
                  - {name: target_structure, value: "{{workflow.parameters.target_structure}}"}
                  - {name: learning_rate, value: 2e-4}
                  - {name: epochs, value: 30}
                  - {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_00"}
                  - {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_01"}
                  - {name: class_weight, value: "[1.0, 1.0]"}
                  - {name: description, value: '{"author":"Brad Larson","description":"Crisp segment optimize obective and size target size target {{workflow.parameters.target_structure}}"}'}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.normalized-train.outputs.artifacts.results}}"
            - name: train-fine
              dependencies: [train]
              template: train
              when: "{{workflow.parameters.start}} < 3"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: train, value: true}
                  - {name: infer, value: false}
                  - {name: search_structure, value: true}
                  - {name: k_structure, value: 0.1}
                  - {name: target_structure, value: "{{workflow.parameters.target_structure}}"}
                  - {name: learning_rate, value: 1e-4}
                  - {name: start_epoch, value: 0}
                  - {name: epochs, value: 50}
                  - {name: ejector, value: 'prune_basis'}
                  - {name: ejector_epoch, value: 25}
                  - {name: ejector_max, value: 1.0}
                  - {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_01"}
                  - {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_02"}
                  - {name: description, value: '{"author":"Brad Larson","description":"Crisp segment optimize obective and size target size {{workflow.parameters.target_structure}}"}'}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.train.outputs.artifacts.results}}"
            - name: relaxed-test
              dependencies: [train-fine]
              template: train
              when: "{{workflow.parameters.start}} < 4"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: train, value: false}
                  - {name: infer, value: true}
                  - {name: search_structure, value: false}
                  - {name: learning_rate, value: 1e-4}
                  - {name: k_prune_basis, value: 1.0}
                  - {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_02"}
                  - {name: description, value: '{"author":"Brad Larson","description":"Crisp segment test relaxed model target structure {{workflow.parameters.target_structure}}"}'}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.train-fine.outputs.artifacts.results}}"
            - name: prune
              dependencies: [train-fine]
              template: train
              when: "{{workflow.parameters.start}} < 5"
              arguments:
                parameters:
                  - {name: prune, value: true}
                  - {name: train, value: true}
                  - {name: infer, value: false}
                  - {name: search_structure, value: false}
                  - {name: learning_rate, value: 1e-4}
                  - {name: epochs, value: 30}
                  - {name: target_structure, value: '{{workflow.parameters.target_structure}}'}
                  - {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_02"}
                  - {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_03"}
                  - {name: description, value: '{"author":"Brad Larson","description":"Crisp segment test-target-size {{workflow.parameters.target_structure}}"}'}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.train-fine.outputs.artifacts.results}}"
            - name: test
              dependencies: [prune]
              template: train
              when: "{{workflow.parameters.start}} < 6"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: train, value: false}
                  - {name: infer, value: true}
                  - {name: search_structure, value: false}
                  - {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}_03"}
                  - {name: description, value: '{"author":"Brad Larson","description":"Crisp segment test finetune {{workflow.parameters.target_structure}}"}'}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.prune.outputs.artifacts.results}}"

      - name: train
        inputs:
          parameters:
            - {name: prune, value: false}
            - {name: train, value: true}
            - {name: infer, value: true}
            - {name: onnx, value: false}
            - {name: search_structure, value: true}
            - {name: target_structure, value: "{{workflow.parameters.target_structure}}"}
            - {name: epochs, value: 2}
            - {name: start_epoch, value: 0}
            - {name: ejector, value: 'None'}
            - {name: ejector_epoch, value: 0}
            - {name: ejector_max, value: 1.0}
            - {name: k_prune_basis, value: 1.0}
            - {name: model_src, value: ""}
            - {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}"}
            - {name: k_structure, value: 0.01}
            - {name: learning_rate, value: 1e-4}
            - {name: class_weight, value: "[1.0, 1.0]"}
            - {name: description, value: '{"author":"Brad Larson","description":"Crisp LIT segmentation"}'}
            - {name: resultspath, value: "/app/results.yaml"}
            - {name: prevresultspath, value: "/app/prevresults.yaml"}

          artifacts:
            - name: prev_results
              path: "{{inputs.parameters.prevresultspath}}"
        outputs:
          parameters:
            - name: results
              valueFrom:
                path: '{{inputs.parameters.resultspath}}'
          artifacts:
            - name: results
              path: '{{inputs.parameters.resultspath}}'
        # Shared memory volume needed for worker threads:
        # https://stackoverflow.com/questions/46085748/define-size-for-dev-shm-on-container-engine/46434614#46434614
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
        container:
          image: '{{workflow.parameters.train_image}}'
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
          command:
            - python3
          args:
            - networks/network2d.py
            - -dataset={{workflow.parameters.dataset}}
            - -height={{workflow.parameters.height}}
            - -width={{workflow.parameters.width}}
            - -prune={{inputs.parameters.prune}}
            - -train={{inputs.parameters.train}}
            - -epochs={{inputs.parameters.epochs}}
            - -start_epoch={{inputs.parameters.start_epoch}}
            - -infer={{inputs.parameters.infer}}
            - -onnx={{inputs.parameters.onnx}}
            - -search_structure={{inputs.parameters.search_structure}}
            - -target_structure={{inputs.parameters.target_structure}}
            - -k_structure={{inputs.parameters.k_structure}}
            - -learning_rate={{inputs.parameters.learning_rate}}
            - -model_src={{inputs.parameters.model_src}}
            - -model_dest={{inputs.parameters.model_dest}}
            - -tb_dest=crisp{{workflow.parameters.dataset}}_{{workflow.parameters.output_name}}_tb
            - -description={{inputs.parameters.description}}
            - -resultspath={{inputs.parameters.resultspath}}
            - -prevresultspath={{inputs.parameters.prevresultspath}}
            - -batch_size={{workflow.parameters.batch_size}}
            - -class_weight={{inputs.parameters.class_weight}}
            - -batch_norm=true
            - -job
            - -k_prune_basis={{inputs.parameters.k_prune_basis}}
            - -ejector={{inputs.parameters.ejector}}
            - -ejector_epoch={{inputs.parameters.ejector_epoch}}
            - -ejector_max={{inputs.parameters.ejector_max}}
            - -debug={{workflow.parameters.debug}}
            - -minimum={{workflow.parameters.min}}
          ports:
            - name: debug
              containerPort: 3000
              hostPort: 3000
            - name: tensorboard
              containerPort: 6006
              hostPort: 6006
          resources:
            requests:
              ephemeral-storage: "40Gi"
              "nvidia.com/gpu": '1'
            limits:
              ephemeral-storage: "40Gi"
              "nvidia.com/gpu": '1'
          retryStrategy:
            limit: "3"
            retryPolicy: "Always"
