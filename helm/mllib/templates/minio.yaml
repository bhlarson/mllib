apiVersion: v1
kind: PersistentVolume
metadata:
  name: mlstore
spec:
  storageClassName: mlstore
  capacity:
    storage: {{ .Values.objectstore.size | quote }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: {{.Values.objectstore.hostPath.path}}

--- 

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. Will be used in deployment below.
  name: minio-pv-claim
  namespace: {{ .Release.Namespace }}
  labels:
    app: minio-storage-claim
spec:
  # Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteOnce
  storageClassName: Filesystem
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: {{ .Values.objectstore.size | quote }}
  storageClassName: mlstore

---

apiVersion: v1
kind: Service
metadata:
  name: {{.Values.objectstore.name}}
  namespace: {{ .Release.Namespace }}
spec:
  type: LoadBalancer
  ports:
    - name: api
      port: 9000
      targetPort: 9000
      nodePort: 30990
      protocol: TCP
    - name: console
      port: 9001
      targetPort: 9001
      nodePort: 30991
      protocol: TCP
  selector:
    app: minio

---

apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: {{.Values.objectstore.name}}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: minio
    spec:
      # Refer to the PVC created earlier
      volumes:
      - name: storage
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: minio-pv-claim
      containers:
      - name: minio
        # Pulls the default Minio image from Docker Hub
        image: minio/minio:latest
        args:
        - server
        - /data
        - "--console-address"
        - ":9001"
        env:
        # Minio access key and secret key
        - name: MINIO_ACCESS_KEY
          value: "admin"
        - name: MINIO_SECRET_KEY
          value: "mlstoreadmin"
        ports:
        - containerPort: 9000
          hostPort: 9000
        - containerPort: 9001
          hostPort: 9001
        # Mount the volume into the pod
        volumeMounts:
        - name: storage # must match the volume name, above
          mountPath: "/data"