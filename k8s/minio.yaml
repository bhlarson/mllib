---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{.Values.objectstore.name}}
  labels:
    app: {{.Values.app}}
spec:
  storageClassName: objectstore
  capacity:
    storage: {{.Values.objectstore.size | quote}}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: {{.Values.objectstore.hostPath.path}}

--- 

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{.Values.objectstore.name}}
  namespace: {{.Release.Namespace}}
  labels:
    app: {{.Values.app}}
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{.Values.objectstore.size | quote}}
  storageClassName: objectstore

---

  apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: {{.Values.app}}
    name: {{.Values.objectstore.credentials.name}}
  stringData:
    accesskey: {{.Values.objectstore.credentials.access_key}}
    secretkey: {{.Values.objectstore.credentials.secret_key}}
  type: Opaque

---

  apiVersion: v1
kind: Service
metadata:
  name: {{.Values.objectstore.name}}
  namespace: {{.Release.Namespace}}
spec:
  type: NodePort
  selector:
    app: {{.Values.app}}
  ports:
    - name: api
      port: {{.Values.objectstore.apiContainerPort}}
      targetPort: {{.Values.objectstore.apiContainerPort}}
      nodePort: {{.Values.objectstore.apinodePort}}
      protocol: TCP
    - name: console
      port: {{.Values.objectstore.consoleContainerPort}}
      targetPort: {{.Values.objectstore.consoleContainerPort}}
      nodePort: {{.Values.objectstore.consolenodePort}}
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.objectstore.name}}
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      app: {{.Values.app}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: {{.Values.app}}
    spec:
      volumes:
      - name: storage
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: {{.Values.objectstore.name}}
      containers:
      - name: {{.Values.objectstore.name}}
        # Pulls the default MinIO image from Docker Hub
        image: {{.Values.objectstore.image}}
        args:
          - server
          - /data
          - "--address"
          - ":{{.Values.objectstore.apiContainerPort}}"
          - "--console-address"
          - ":{{.Values.objectstore.consoleContainerPort}}"
        env:
        # MinIO access key and secret key
        - name: MINIO_ACCESS_KEY
          value: {{.Values.objectstore.credentials.access_key}}
        - name: MINIO_SECRET_KEY
          value: {{.Values.objectstore.credentials.secret_key}}
        ports:
          - containerPort: {{.Values.objectstore.apiContainerPort}}
            hostPort: {{.Values.objectstore.apiContainerPort}}
          - containerPort: {{.Values.objectstore.consoleContainerPort}}
            hostPort: {{.Values.objectstore.consoleContainerPort}}
        # Mount the volume into the pod
        volumeMounts:
          - name: storage  # must match the volume name, above
            mountPath: "/data"
        # - name: secret-volume
        #  mountPath: /root/.minio/certs
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: {{.Values.objectstore.apiContainerPort}}
          initialDelaySeconds: 25
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: {{.Values.objectstore.apiContainerPort}}
          initialDelaySeconds: 25
          periodSeconds: 10

---
#
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#  name: store-ingress
#  namespace: {{.Release.Namespace}}
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"
#    nginx.ingress.kubernetes.io/rewrite-target: /minio
# spec:
#  rules:
#  - http:
#      paths:
#      - path: /minio
#        pathType: Prefix
#        backend:
#          serviceName: {{.Values.objectstore.name}}
#          servicePort: storeport
