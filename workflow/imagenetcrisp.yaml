# yamllint disable-line rule:line-length
workflow:
  metadata:
    generateName: crispimagenet-
  annotations:
    workflows.ml.argoproj.io/description: |
      Perform a training sequence
      Find parameter optimized network
  spec:
    arguments:
      parameters:
        - name: train_image
          value: 'localhost:32000/torch-train:latest'
        - name: batch_size
          value: 250
        - name: output_name
          value: 20220520i
        - name: description
          value: '{"author":"Brad Larson","description":"Crisp imagenet classification"}'
        - name: target_structure
          value: 0.0
        - name: model_class
          value: ImClassify
        - name: dataset
          value: imagenet
        - name: width
          value: 224
        - name: height
          value: 224
          # Start step to test/recover failed runs
        - name: start
          value: 0
          # Start container and wait for debugger to attach
        - name: debug
          value: false
        - name: profile
          value: false
          # Perform minimum run to test code execution
        - name: min
          value: false
        - name: search_flops
          value: true
        - name: dataset_path
          value: /data
        - name: tb_logs
          value: /tb_logs
        # cell2d.py -resnet_len for supported lenghts
        - name: resnet_len
          value: 50
        - name: num_workers
          value: 25
        - name: optimizer
          value: adamw
        - name: s3_name
          value: store
          
    entrypoint: train-crisp
    priority: 1
    templates:
      - name: train-crisp
        dag:
          tasks:
            - name: test
              template: train
              when: "{{workflow.parameters.start}} < 1"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: train, value: false}
                  - {name: test, value: true}
                  - {name: model_src, value: ""}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_test"}
                artifacts:
                  - name: prev_results
                    raw:
                      data: |
                        batches: 0
            - name: search-structure-00
              dependencies: [test]
              template: train
              when: "{{workflow.parameters.start}} < 2"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: model_src, value: ""}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_00"}
                artifacts:
                  - name: prev_results
                    raw:
                      data: |
                        batches: 0
            - name: search-structure-01
              dependencies: [search-structure-00]
              template: train
              when: "{{workflow.parameters.start}} < 3"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_00"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_01"}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-00.outputs.artifacts.results}}"
            - name: search-structure-02
              dependencies: [search-structure-01]
              template: train
              when: "{{workflow.parameters.start}} < 4"
              arguments:
                parameters:
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_01"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_02"}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-01.outputs.artifacts.results}}"
            - name: search-structure-03
              dependencies: [search-structure-02]
              template: train
              when: "{{workflow.parameters.start}} < 5"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_02"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_03"}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-02.outputs.artifacts.results}}"
            - name: search-structure-04
              dependencies: [search-structure-03]
              template: train
              when: "{{workflow.parameters.start}} < 6"
              arguments:
                parameters:
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_03"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_04"}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-03.outputs.artifacts.results}}"
            - name: search-structure-05
              dependencies: [search-structure-04]
              template: train
              when: "{{workflow.parameters.start}} < 7"
              arguments:
                parameters:
                  - {name: prune, value: false}
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_04"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_05"}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-04.outputs.artifacts.results}}"
            - name: search-structure-06
              dependencies: [search-structure-05]
              template: train
              when: "{{workflow.parameters.start}} < 8"
              arguments:
                parameters:
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_05"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}_search_structure_06"}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-05.outputs.artifacts.results}}"
            - name: search-structure-07
              dependencies: [search-structure-06]
              template: train
              when: "{{workflow.parameters.start}} < 9"
              arguments:
                parameters:
                  - {name: model_src, value: "{{workflow.parameters.output_name}}_search_structure_06"}
                  - {name: model_dest, value: "{{workflow.parameters.output_name}}"}
                  - {name: k_structure, value: 0.0}
                  - {name: k_prune_basis, value: 0.0}
                artifacts:
                  - name: prev_results
                    from: "{{tasks.search-structure-06.outputs.artifacts.results}}"

      - name: train
        inputs:
          parameters:
            - {name: batch_size, value: "{{workflow.parameters.batch_size}}"}
            - {name: prune, value: true}
            - {name: train, value: true}
            - {name: test, value: true}
            - {name: onnx, value: false}
            - {name: search_structure, value: true}
            - {name: target_structure, value: "{{workflow.parameters.target_structure}}"}
            - {name: epochs, value: 2}
            - {name: start_epoch, value: 0}
            - {name: ejector, value: 'prune_basis'}
            - {name: ejector_start, value: 0}
            - {name: ejector_full, value: 1}
            - {name: ejector_max, value: 1.0}
            - {name: model_src, value: ""}
            - {name: model_dest, value: "crispimagenet_{{workflow.parameters.output_name}}"}
            - {name: k_accuracy, value: 0.5}
            - {name: k_structure, value: 1.0}
            - {name: k_prune_basis, value: 2.0}
            - {name: learning_rate, value: 1e-4}
            - {name: learning_rate_decay, value: 0.33}
            - {name: rate_schedule, value: "[10, 13]"}
            - {name: description, value: "{{workflow.parameters.description}}"}
            - {name: resultspath, value: "/app/results.yaml"}
            - {name: prevresultspath, value: "/app/prevresults.yaml"}
            - {name: k_prune_sigma, value: 1.0}
            - {name: convMaskThreshold, value: 0.1}
            - {name: augment_rotation, value: 10 }
            - {name: augment_scale_min, value: 1 }
            - {name: augment_scale_max, value: 1.25 }
            - {name: augment_translate_x, value: 0.1 }
            - {name: augment_translate_y, value: 0.1 }
            - {name: augment_noise, value: 0.1 }
            - {name: dropout, value: false }
            - {name: dropout_rate, value: 0.0 }
            - {name: test_sparsity, value: 10 }
            - {name: optimizer, value: "{{workflow.parameters.optimizer}}"} 

          artifacts:
            - name: prev_results
              path: "{{inputs.parameters.prevresultspath}}"
        outputs:
          parameters:
            - name: results
              valueFrom:
                path: '{{inputs.parameters.resultspath}}'
          artifacts:
            - name: results
              path: '{{inputs.parameters.resultspath}}'
        # Shared memory volume needed for worker threads:
        # https://stackoverflow.com/questions/46085748/define-size-for-dev-shm-on-container-engine/46434614#46434614
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
          - name: workerstorage
            persistentVolumeClaim:
              claimName: workerstorage
          - name: tblogs
            persistentVolumeClaim:
              claimName: tblogs
        container:
          image: '{{workflow.parameters.train_image}}'
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - name: workerstorage
              mountPath: '{{workflow.parameters.dataset_path}}'
            - name: tblogs
              mountPath: '{{workflow.parameters.tb_logs}}'
          command:
            - python3
          args:
            - networks/cell2d.py
            - -model_class={{workflow.parameters.model_class}}
            - -dataset={{workflow.parameters.dataset}}
            - -height={{workflow.parameters.height}} 
            - -width={{workflow.parameters.width}}
            - -prune={{inputs.parameters.prune}}
            - -train={{inputs.parameters.train}}
            - -profile={{workflow.parameters.profile}}
            - -epochs={{inputs.parameters.epochs}}
            - -start_epoch={{inputs.parameters.start_epoch}}
            - -test={{inputs.parameters.test}}
            - -onnx={{inputs.parameters.onnx}}
            - -search_structure={{inputs.parameters.search_structure}}
            - -target_structure={{inputs.parameters.target_structure}}
            - -k_accuracy={{inputs.parameters.k_accuracy}}
            - -k_structure={{inputs.parameters.k_structure}}
            - -optimizer={{inputs.parameters.optimizer}} 
            - -learning_rate={{inputs.parameters.learning_rate}}
            - -learning_rate_decay={{inputs.parameters.learning_rate_decay}}
            - -rate_schedule={{inputs.parameters.rate_schedule}}
            - -model_src={{inputs.parameters.model_src}}
            - -model_dest={{inputs.parameters.model_dest}}
            - -description={{inputs.parameters.description}}
            - -resultspath={{inputs.parameters.resultspath}}
            - -prevresultspath={{inputs.parameters.prevresultspath}}
            - -batch_size={{inputs.parameters.batch_size}}
            - -batch_norm=true
            - -job
            - -k_prune_basis={{inputs.parameters.k_prune_basis}}
            - -ejector={{inputs.parameters.ejector}}
            - -ejector_start={{inputs.parameters.ejector_start}}
            - -ejector_full={{inputs.parameters.ejector_full}}
            - -ejector_max={{inputs.parameters.ejector_max}}
            - -debug={{workflow.parameters.debug}}
            - -minimum={{workflow.parameters.min}}
            - -k_prune_sigma={{inputs.parameters.k_prune_sigma}}
            - -convMaskThreshold={{inputs.parameters.convMaskThreshold}}
            - -search_flops={{workflow.parameters.search_flops}}
            - -dataset_path={{workflow.parameters.dataset_path}}
            - -tensorboard_dir={{workflow.parameters.tb_logs}}/{{workflow.parameters.output_name}}_tb
            - -tb_dest={{workflow.parameters.output_name}}_tb
            - -resnet_len={{workflow.parameters.resnet_len}}
            - -num_workers={{workflow.parameters.num_workers}}
            - -augment_rotation={{inputs.parameters.augment_rotation}}
            - -augment_scale_min={{inputs.parameters.augment_scale_min}}
            - -augment_scale_max={{inputs.parameters.augment_scale_max}}
            - -augment_translate_x={{inputs.parameters.augment_translate_x}}
            - -augment_translate_y={{inputs.parameters.augment_translate_y}}
            - -augment_noise={{inputs.parameters.augment_noise}}
            - -test_sparsity={{inputs.parameters.test_sparsity}}
            - -useConv1=True
            - -dropout={{inputs.parameters.dropout}}
            - -dropout_rate={{inputs.parameters.dropout_rate}}
            - -s3_name={{workflow.parameters.s3_name}}

          ports:
            - name: debug
              containerPort: 3000
              #hostPort: 3000
          resources:
            requests:
              ephemeral-storage: "40Gi"
              "nvidia.com/gpu": '1'
            limits:
              ephemeral-storage: "40Gi"
              "nvidia.com/gpu": '1'
          retryStrategy:
            limit: "3"
            retryPolicy: "Always"
