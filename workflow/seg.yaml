# yamllint disable-line rule:line-length
workflow:
  metadata:
    generateName: crisplit-
  annotations:
    workflows.ml.argoproj.io/description: |
      Perform a training sequence
      Find parameter optimized network
  spec:
    arguments:
      parameters:
        - name: resultspath
          value: /app/results.json
        - name: train_image
          value: 'localhost:32000/torch-train:latest'
        - name: target_structure
          value: 0.50
        - name: output_name
          value: 20220323h
        - name: start
          value: 0
        - name: batch_size
          value: 4
    entrypoint: train-crisp
    priority: 1
    templates:
      - name: train-crisp
        dag:
          tasks:
            - name: normalized-train
              template: train
              when: "{{workflow.parameters.start}} < 1"
              arguments:
                parameters: [
                  {name: prune, value: false},
                  {name: train, value: true},
                  {name: infer, value: false},
                  {name: search_structure, value: false},
                  {name: target_structure, value: 1.0},
                  {name: epochs, value: 5},
                  {name: model_src, value: ""},
                  {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}_100_00"},
                  {name: class_weight, value: "[0.01, 1.0]"},
                  {name: description, value: '{"author":"Brad Larson","description":"Crisp segment class normzlized train {{workflow.parameters.target_structure}}"}'}]
            - name: full-train
              dependencies: [normalized-train]
              template: train
              when: "{{workflow.parameters.start}} < 2"
              arguments:
                parameters: [
                  {name: prune, value: false},
                  {name: train, value: true},
                  {name: infer, value: false},
                  {name: search_structure, value: false},
                  {name: target_structure, value: 1.0},
                  {name: epochs, value: 100},
                  {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}_100_00"},
                  {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}_100_01"},
                  {name: description, value: '{"author":"Brad Larson","description":"Crisp segment full {{workflow.parameters.target_structure}}"}'}]
            - name: target-size
              dependencies: [full-train]
              template: train
              when: "{{workflow.parameters.start}} < 3"
              arguments:
                parameters: [
                  {name: prune, value: false},
                  {name: train, value: true},
                  {name: infer, value: false},
                  {name: search_structure, value: true},
                  {name: target_structure, value: '{{workflow.parameters.target_structure}}'},
                  {name: epochs, value: 20},
                  {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}_100_01"},
                  {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}"},
                  {name: description, value: '{"author":"Brad Larson","description":"Crisp segment target-size {{workflow.parameters.target_structure}}"}'}]
            - name: prune
              dependencies: [target-size]
              template: train
              when: "{{workflow.parameters.start}} < 4"
              arguments:
                parameters: [
                  {name: prune, value: true},
                  {name: train, value: true},
                  {name: infer, value: false},
                  {name: search_structure, value: false},
                  {name: learning_rate, value: 1e-4},
                  {name: epochs, value: 10},
                  {name: target_structure, value: '{{workflow.parameters.target_structure}}'},
                  {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}"},
                  {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}p"},
                  {name: description, value: '{"author":"Brad Larson","description":"Crisp segment test-target-size {{workflow.parameters.target_structure}}"}'}]
            - name: test
              dependencies: [prune]
              template: train
              when: "{{workflow.parameters.start}} < 5"
              arguments:
                parameters: [
                  {name: prune, value: false},
                  {name: train, value: false},
                  {name: infer, value: true},
                  {name: search_structure, value: false},
                  {name: model_src, value: "crisplit_{{workflow.parameters.output_name}}{{workflow.parameters.target_structure}}p"},
                  {name: description, value: '{"author":"Brad Larson","description":"Crisp segment test finetune {{workflow.parameters.target_structure}}"}'}]

      - name: train
        inputs:
          parameters: [
            {name: prune, value: false},
            {name: train, value: true},
            {name: infer, value: true},
            {name: onnx, value: false},
            {name: search_structure, value: true},
            {name: target_structure, value: "{{workflow.parameters.target_structure}}"},
            {name: epochs, value: 2},
            {name: k_prune_basis, value: 0.1},
            {name: model_src, value: ""},
            {name: model_dest, value: "crisplit_{{workflow.parameters.output_name}}"},
            {name: k_structure, value: 1.0},
            {name: learning_rate, value: 4e-4},
            {name: class_weight, value: "[1.0, 1.0]"},
            {name: description, value: '{"author":"Brad Larson","description":"Crisp LIT segmentation"}'}]
        outputs:
          parameters:
            - name: results
              valueFrom:
                path: '{{workflow.parameters.resultspath}}'
        # Shared memory volume needed for worker threads: 
        # https://stackoverflow.com/questions/46085748/define-size-for-dev-shm-on-container-engine/46434614#46434614
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
        container:
          image: '{{workflow.parameters.train_image}}'
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
          command:
            - python3
          args:
            - networks/network2d.py
            - -prune={{inputs.parameters.prune}}
            - -train={{inputs.parameters.train}}
            - -epochs={{inputs.parameters.epochs}}
            - -infer={{inputs.parameters.infer}}
            - -onnx={{inputs.parameters.onnx}}
            - -search_structure={{inputs.parameters.search_structure}}
            - -target_structure={{inputs.parameters.target_structure}}
            - -k_structure={{inputs.parameters.k_structure}}
            - -learning_rate={{inputs.parameters.learning_rate}}
            - -model_src={{inputs.parameters.model_src}}
            - -model_dest={{inputs.parameters.model_dest}}
            - -description={{inputs.parameters.description}}
            - -resultspath={{workflow.parameters.resultspath}}
            - -batch_size={{workflow.parameters.batch_size}}
            - -class_weight={{inputs.parameters.class_weight}}
            - -batch_norm=true
            - -job
            - -k_prune_basis={{inputs.parameters.k_prune_basis}}
            - -ejector=prune_basis
          ports:
            - name: debug
              containerPort: 3000
              hostPort: 3000
            - name: tensorboard
              containerPort: 6006
              hostPort: 6006
          resources:
            requests:
              ephemeral-storage: "40Gi"
              "nvidia.com/gpu": '1'
            limits:
              ephemeral-storage: "40Gi"
              "nvidia.com/gpu": '1'
          retryStrategy:
            limit: "3"
            retryPolicy: "Always"
